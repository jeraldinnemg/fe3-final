{"ast":null,"code":"var _jsxFileName = \"/Users/jeraldinnemolleda/Documents/Jeraldinne/CTD/bimestre-6/frontend3/MolledaJeraldinne-FrontendParcial/fe3-final/src/Routes/Favs.jsx\";\nimport React from \"react\";\nimport Card from \"../Components/Card\";\nimport { obtenerFavoritosDeStorage } from \"../Components/utils/metodosLocalStorage\"; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Favs = () => {\n  const favorites = obtenerFavoritosDeStorage();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Dentists Favs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-grid\",\n      children: favorites.map(favorite => /*#__PURE__*/_jsxDEV(Card, {\n        name: favorite.name,\n        username: favorite.username,\n        id: favorite.id\n      }, favorite.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_c = Favs;\nexport default Favs;\n\nvar _c;\n\n$RefreshReg$(_c, \"Favs\");","map":{"version":3,"names":["React","Card","obtenerFavoritosDeStorage","Favs","favorites","map","favorite","name","username","id"],"sources":["/Users/jeraldinnemolleda/Documents/Jeraldinne/CTD/bimestre-6/frontend3/MolledaJeraldinne-FrontendParcial/fe3-final/src/Routes/Favs.jsx"],"sourcesContent":["import React from \"react\";\nimport Card from \"../Components/Card\";\nimport { obtenerFavoritosDeStorage } from \"../Components/utils/metodosLocalStorage\";\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nconst Favs = () => {\n  const favorites = obtenerFavoritosDeStorage();\n\n  return (\n    <>\n      <h1>Dentists Favs</h1>\n      <div className=\"card-grid\">\n        {/* este componente debe consumir los destacados del localStorage */}\n        {/* Deberan renderizar una Card por cada uno de ellos */}\n        {favorites.map((favorite) => (\n          <Card\n            key={favorite.id}\n            name={favorite.name}\n            username={favorite.username}\n            id={favorite.id}\n          />\n        ))}\n      \n      </div>\n    </>\n  );\n};\n\nexport default Favs;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,yBAAT,QAA0C,yCAA1C,C,CACA;;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EACjB,MAAMC,SAAS,GAAGF,yBAAyB,EAA3C;EAEA,oBACE;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAK,SAAS,EAAC,WAAf;MAAA,UAGGE,SAAS,CAACC,GAAV,CAAeC,QAAD,iBACb,QAAC,IAAD;QAEE,IAAI,EAAEA,QAAQ,CAACC,IAFjB;QAGE,QAAQ,EAAED,QAAQ,CAACE,QAHrB;QAIE,EAAE,EAAEF,QAAQ,CAACG;MAJf,GACOH,QAAQ,CAACG,EADhB;QAAA;QAAA;QAAA;MAAA,QADD;IAHH;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA,gBADF;AAkBD,CArBD;;KAAMN,I;AAuBN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}